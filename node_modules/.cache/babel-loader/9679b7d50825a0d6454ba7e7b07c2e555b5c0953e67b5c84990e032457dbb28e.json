{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bm068\\\\Desktop\\\\Earth\\\\src\\\\components\\\\EarthquakeMap.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { MapContainer, TileLayer, Popup, CircleMarker } from 'react-leaflet';\nimport { useEarthquakes } from '../context/EarthquakeContext';\nimport './EarthquakeMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EarthquakeMap = () => {\n  _s();\n  const {\n    earthquakes,\n    loading,\n    error,\n    selectedEarthquake,\n    setSelectedEarthquake\n  } = useEarthquakes();\n  const getMagnitudeColor = magnitude => {\n    if (magnitude >= 6.0) return '#ff0000'; // Red for major earthquakes\n    if (magnitude >= 4.5) return '#ff6600'; // Orange for moderate earthquakes\n    if (magnitude >= 3.0) return '#ffcc00'; // Yellow for light earthquakes\n    return '#00cc00'; // Green for minor earthquakes\n  };\n  const getMagnitudeSize = magnitude => {\n    return Math.max(5, Math.min(20, magnitude * 3));\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleString();\n  };\n  const handleMarkerClick = earthquake => {\n    setSelectedEarthquake(earthquake);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"\\uD83D\\uDD04 Loading map...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container error\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"\\u274C Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [20, 0],\n      zoom: 2,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      className: \"earthquake-map\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), earthquakes.map(earthquake => {\n        const [longitude, latitude] = earthquake.geometry.coordinates;\n        const magnitude = earthquake.properties.mag;\n        return /*#__PURE__*/_jsxDEV(CircleMarker, {\n          center: [latitude, longitude],\n          radius: getMagnitudeSize(magnitude),\n          fillColor: getMagnitudeColor(magnitude),\n          color: getMagnitudeColor(magnitude),\n          weight: 2,\n          opacity: 0.8,\n          fillOpacity: 0.6,\n          eventHandlers: {\n            click: () => handleMarkerClick(earthquake)\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"earthquake-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: earthquake.properties.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Magnitude:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 22\n                }, this), \" \", magnitude]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Location:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 22\n                }, this), \" \", earthquake.properties.place]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 22\n                }, this), \" \", formatTime(earthquake.properties.time)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Depth:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 22\n                }, this), \" \", earthquake.geometry.coordinates[2], \" km\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: earthquake.properties.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"usgs-link\",\n                children: \"View on USGS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, earthquake.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(EarthquakeMap, \"pkTE18LyDB3iIHrbapvCvZgS+3w=\", false, function () {\n  return [useEarthquakes];\n});\n_c = EarthquakeMap;\nexport default EarthquakeMap;\nvar _c;\n$RefreshReg$(_c, \"EarthquakeMap\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Popup","CircleMarker","useEarthquakes","jsxDEV","_jsxDEV","EarthquakeMap","_s","earthquakes","loading","error","selectedEarthquake","setSelectedEarthquake","getMagnitudeColor","magnitude","getMagnitudeSize","Math","max","min","formatTime","timestamp","Date","toLocaleString","handleMarkerClick","earthquake","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","attribution","map","longitude","latitude","geometry","coordinates","properties","mag","radius","fillColor","color","weight","opacity","fillOpacity","eventHandlers","click","title","place","time","href","target","rel","id","_c","$RefreshReg$"],"sources":["C:/Users/bm068/Desktop/Earth/src/components/EarthquakeMap.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker } from 'react-leaflet';\r\nimport { useEarthquakes, Earthquake } from '../context/EarthquakeContext';\r\nimport './EarthquakeMap.css';\r\n\r\nconst EarthquakeMap: React.FC = () => {\r\n  const { earthquakes, loading, error, selectedEarthquake, setSelectedEarthquake } = useEarthquakes();\r\n\r\n  const getMagnitudeColor = (magnitude: number): string => {\r\n    if (magnitude >= 6.0) return '#ff0000'; // Red for major earthquakes\r\n    if (magnitude >= 4.5) return '#ff6600'; // Orange for moderate earthquakes\r\n    if (magnitude >= 3.0) return '#ffcc00'; // Yellow for light earthquakes\r\n    return '#00cc00'; // Green for minor earthquakes\r\n  };\r\n\r\n  const getMagnitudeSize = (magnitude: number): number => {\r\n    return Math.max(5, Math.min(20, magnitude * 3));\r\n  };\r\n\r\n  const formatTime = (timestamp: number): string => {\r\n    return new Date(timestamp).toLocaleString();\r\n  };\r\n\r\n  const handleMarkerClick = (earthquake: Earthquake) => {\r\n    setSelectedEarthquake(earthquake);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"map-container loading\">\r\n        <div className=\"loading-spinner\">üîÑ Loading map...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"map-container error\">\r\n        <div className=\"error-message\">‚ùå Error: {error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <MapContainer\r\n        center={[20, 0]}\r\n        zoom={2}\r\n        style={{ height: '100%', width: '100%' }}\r\n        className=\"earthquake-map\"\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        \r\n        {earthquakes.map((earthquake) => {\r\n          const [longitude, latitude] = earthquake.geometry.coordinates;\r\n          const magnitude = earthquake.properties.mag;\r\n          \r\n          return (\r\n            <CircleMarker\r\n              key={earthquake.id}\r\n              center={[latitude, longitude]}\r\n              radius={getMagnitudeSize(magnitude)}\r\n              fillColor={getMagnitudeColor(magnitude)}\r\n              color={getMagnitudeColor(magnitude)}\r\n              weight={2}\r\n              opacity={0.8}\r\n              fillOpacity={0.6}\r\n              eventHandlers={{\r\n                click: () => handleMarkerClick(earthquake),\r\n              }}\r\n            >\r\n              <Popup>\r\n                <div className=\"earthquake-popup\">\r\n                  <h3>{earthquake.properties.title}</h3>\r\n                  <p><strong>Magnitude:</strong> {magnitude}</p>\r\n                  <p><strong>Location:</strong> {earthquake.properties.place}</p>\r\n                  <p><strong>Time:</strong> {formatTime(earthquake.properties.time)}</p>\r\n                  <p><strong>Depth:</strong> {earthquake.geometry.coordinates[2]} km</p>\r\n                  <a \r\n                    href={earthquake.properties.url} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"usgs-link\"\r\n                  >\r\n                    View on USGS\r\n                  </a>\r\n                </div>\r\n              </Popup>\r\n            </CircleMarker>\r\n          );\r\n        })}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EarthquakeMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}